{"version":3,"sources":["containers/style.ts","services/consts.ts","components/Img/index.tsx","hooks/usePokemonListAPI.tsx","components/Pokemon/style.ts","components/Pokemon/index.tsx","components/Loading/style.ts","components/Loading/index.tsx","components/SearchBar/style.ts","components/SearchBar/index.tsx","services/api.ts","services/utility.ts","services/fetches.ts","components/List/Dropdown/style.ts","components/List/Dropdown/index.tsx","containers/index.tsx","rootStyles.ts","components/Details/style.ts","hooks/useFetchPokemon.ts","components/Details/LeftPanel/style.ts","components/Details/LeftPanel/Description/style.ts","components/Details/LeftPanel/Description/index.tsx","components/Details/LeftPanel/index.tsx","components/Details/RightPanel/Evolutions/style.ts","components/Details/RightPanel/Evolutions/index.tsx","components/Details/RightPanel/Moves/style.ts","components/Details/RightPanel/Moves/index.tsx","components/Details/RightPanel/Stats/style.ts","components/Details/RightPanel/Stats/index.tsx","components/Details/RightPanel/style.ts","components/Details/RightPanel/Type/index.tsx","components/Details/RightPanel/index.tsx","components/Details/index.tsx","components/List/PokemonListDetails/Item/style.ts","components/List/PokemonListDetails/Item/index.tsx","components/List/PokemonListDetails/style.ts","components/List/PokemonListDetails/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Container","styled","main","spriteEndpoint","id","Img","src","alt","styles","className","AppContext","createContext","undefined","AppProvider","children","useState","pokemons","setPokemons","useEffect","localData","localStorage","getItem","JSON","parse","Provider","value","addPokemon","pokemon","filter","item","length","setItem","stringify","removePokemon","filtered","section","Pokemon","data","history","useHistory","useCtx","useContext","visible","setVisible","partialVisibility","onChange","name","onClick","push","toString","div","Loading","SearchBar","onSearch","list","e","target","type","placeholder","CancelToken","axios","instance","create","baseURL","timeout","headers","Accept","interceptors","request","use","config","cancelToken","c","error","Promise","reject","splitIdFromURL","str","split","replace","Number","getUniqueItems","arr","uniqueItems","i","current","next","slice","fetchDefaultPokemons","count","a","get","modified","results","map","url","fetchMorePokemons","defaultData","api","payload","concat","PokemonList","success","setSuccess","setTimeout","key","initialState","previous","Pokemons","loading","setLoading","setData","searchValue","setSearchValue","setDefaultData","fetch","response","fetchMore","startsWith","toUpperCase","area","document","getElementById","clientHeight","clientWidth","Math","floor","style","overflow","marginTop","dataLength","hasMore","loader","globalCSS","css","useFetchPokemon","setError","species","setSpecies","descriptions","setDescriptions","evolutions","setEvolutions","fetchData","useCallback","pokemonData","fetchSpeciesURL","speciesData","flavorTexts","flavor_text_entries","language","flavor_text","fetchEvolution","evolution_chain","evolutionData","first","chain","evolution1","second","evolves_to","evolution2","third","evolution3","console","Description","index","setIndex","handleButton","newIndex","LeftPanel","front","female","shiny","imgSrc","setImgSrc","setSrc","sprites","source","imageSource","position","light","gender","handleChange","attribute","spriteCopy","Evolutions","front_default","Moves","moves","move","Stats","stats","htmlFor","stat","base_stat","max","badgeColors","Type","badges","random","RightPanel","types","Details","useParams","width","ListItem","PokemonListDetails","App","rootStyles","component","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f5243fda.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Container = styled.main`\r\n  position: relative;\r\n  .title {\r\n    background-color: unset !important;\r\n  }\r\n\r\n  .flex {\r\n    height: 100%;\r\n  }\r\n\r\n  article {\r\n    height: 250px;\r\n    width: 250px;\r\n    background-color: #fff;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    padding-top: 85px !important;\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","const spriteEndpoint = (id: number) =>\r\n  `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`;\r\n\r\nconst apiURL = 'https://pokeapi.co/api/v2/';\r\n\r\nexport { spriteEndpoint, apiURL };\r\n","import React, { MutableRefObject } from 'react';\r\n\r\ninterface ImgProps {\r\n  src: string;\r\n  alt: string;\r\n  styles?: string;\r\n}\r\n\r\nexport const Img = ({ src, alt, styles }: ImgProps) => {\r\n  return <img className={styles} src={src} alt={alt} />;\r\n};\r\n","import React, { createContext, useEffect, useState } from 'react';\r\nimport { AppContextProps, PokemonProps } from '../types/pokemon';\r\n\r\n// Redux ile de aynı fonksiyonalite sağlanabilirdi.\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const AppContext = createContext<AppContextProps | undefined>(undefined);\r\n\r\nexport const AppProvider = ({ children }: Props) => {\r\n  const [pokemons, setPokemons] = useState<PokemonProps[]>([]);\r\n\r\n  const addPokemon = (pokemon: PokemonProps) => {\r\n    if (pokemons.filter((item) => item.id === pokemon.id).length < 1) {\r\n      localStorage.setItem('list', JSON.stringify([...pokemons, pokemon]));\r\n      return setPokemons([...pokemons, pokemon]);\r\n    }\r\n  };\r\n\r\n  const removePokemon = (id: number) => {\r\n    const filtered = pokemons.filter((item) => item.id !== id);\r\n    localStorage.setItem('list', JSON.stringify(filtered));\r\n    return setPokemons(filtered);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localData = localStorage.getItem('list');\r\n    if (localData) {\r\n      return setPokemons(JSON.parse(localData));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AppContext.Provider value={{ pokemons, addPokemon, removePokemon }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nconst Container = styled.section`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  font-style: italic;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nexport default Container;\r\n","import React, { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport VisibilitySensor from 'react-visibility-sensor';\r\nimport { spriteEndpoint } from '../../services/consts';\r\nimport { AppContextProps, Stat } from '../../types/pokemon';\r\nimport { Img } from '../Img';\r\nimport { AppContext } from '../../hooks/usePokemonListAPI';\r\nimport Container from './style';\r\ninterface Pokemon {\r\n  data: Stat;\r\n}\r\n\r\nexport const Pokemon = ({ data }: Pokemon) => {\r\n  const history = useHistory();\r\n  const useCtx = useContext<AppContextProps | undefined>(AppContext);\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <VisibilitySensor partialVisibility onChange={setVisible}>\r\n      <Container className=\"m1 p1\">\r\n        {visible && (\r\n          <>\r\n            <Img src={spriteEndpoint(data.id)} alt={data.name} />\r\n            <span className=\"nes-text is-primary\">{data.name}</span>\r\n            <div className=\"mb1\">\r\n              <span\r\n                className=\"mr3\"\r\n                onClick={() => history.push(`/pokemon/${data.id.toString()}`)}\r\n              >\r\n                <i className=\"nes-pointer nes-icon trophy\" />\r\n              </span>\r\n              <span\r\n                onClick={() =>\r\n                  useCtx?.addPokemon({ id: data.id, name: data.name })\r\n                }\r\n              >\r\n                <i className=\"nes-pointer nes-icon heart\" />\r\n              </span>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </VisibilitySensor>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  width: 12rem;\r\n  height: 12rem;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  position: absolute;\r\n\r\n  .pixel {\r\n    width: 1rem;\r\n    height: 1rem;\r\n    box-shadow: \r\n    /* row 1 */ 0rem 0rem 0 -0.05rem #fff,\r\n      1rem 0rem 0 -0.05rem #fff, 2rem 0rem 0 -0.05rem #fff,\r\n      3rem 0rem 0 -0.05rem #fff, 4rem 0rem 0 -0.05rem #222,\r\n      5rem 0rem 0 -0.05rem #222, 6rem 0rem 0 -0.05rem #222,\r\n      7rem 0rem 0 -0.05rem #222, 8rem 0rem 0 -0.05rem #fff,\r\n      9rem 0rem 0 -0.05rem #fff, 10rem 0rem 0 -0.05rem #fff,\r\n      11rem 0rem 0 -0.05rem #fff, /* row 2 */ 0rem 1rem 0 -0.05rem #fff,\r\n      1rem 1rem 0 -0.05rem #fff, 2rem 1rem 0 -0.05rem #222,\r\n      3rem 1rem 0 -0.05rem #222, 4rem 1rem 0 -0.05rem #f00,\r\n      5rem 1rem 0 -0.05rem #f00, 6rem 1rem 0 -0.05rem #f00,\r\n      7rem 1rem 0 -0.05rem #f00, 8rem 1rem 0 -0.05rem #222,\r\n      9rem 1rem 0 -0.05rem #222, 10rem 1rem 0 -0.05rem #fff,\r\n      11rem 1rem 0 -0.05rem #fff, /* row 3 */ 0rem 2rem 0 -0.05rem #fff,\r\n      1rem 2rem 0 -0.05rem #222, 2rem 2rem 0 -0.05rem #f00,\r\n      3rem 2rem 0 -0.05rem #f00, 4rem 2rem 0 -0.05rem #f00,\r\n      5rem 2rem 0 -0.05rem #f00, 6rem 2rem 0 -0.05rem #f00,\r\n      7rem 2rem 0 -0.05rem #f00, 8rem 2rem 0 -0.05rem #f00,\r\n      9rem 2rem 0 -0.05rem #f00, 10rem 2rem 0 -0.05rem #222,\r\n      11rem 2rem 0 -0.05rem #fff, /* row 4 */ 0rem 3rem 0 -0.05rem #fff,\r\n      1rem 3rem 0 -0.05rem #222, 2rem 3rem 0 -0.05rem #f00,\r\n      3rem 3rem 0 -0.05rem #f00, 4rem 3rem 0 -0.05rem #f00,\r\n      5rem 3rem 0 -0.05rem #f00, 6rem 3rem 0 -0.05rem #f00,\r\n      7rem 3rem 0 -0.05rem #f00, 8rem 3rem 0 -0.05rem #f00,\r\n      9rem 3rem 0 -0.05rem #f00, 10rem 3rem 0 -0.05rem #222,\r\n      11rem 3rem 0 -0.05rem #fff, /* row 5 */ 0rem 4rem 0 -0.05rem #222,\r\n      1rem 4rem 0 -0.05rem #f00, 2rem 4rem 0 -0.05rem #f00,\r\n      3rem 4rem 0 -0.05rem #f00, 4rem 4rem 0 -0.05rem #f00,\r\n      5rem 4rem 0 -0.05rem #f00, 6rem 4rem 0 -0.05rem #f00,\r\n      7rem 4rem 0 -0.05rem #f00, 8rem 4rem 0 -0.05rem #f00,\r\n      9rem 4rem 0 -0.05rem #f00, 10rem 4rem 0 -0.05rem #f00,\r\n      11rem 4rem 0 -0.05rem #222, /* row 6 */ 0rem 5rem 0 -0.05rem #222,\r\n      1rem 5rem 0 -0.05rem #f00, 2rem 5rem 0 -0.05rem #f00,\r\n      3rem 5rem 0 -0.05rem #f00, 4rem 5rem 0 -0.05rem #f00,\r\n      5rem 5rem 0 -0.05rem #222, 6rem 5rem 0 -0.05rem #222,\r\n      7rem 5rem 0 -0.05rem #f00, 8rem 5rem 0 -0.05rem #f00,\r\n      9rem 5rem 0 -0.05rem #f00, 10rem 5rem 0 -0.05rem #f00,\r\n      11rem 5rem 0 -0.05rem #222, /* row 7 */ 0rem 6rem 0 -0.05rem #222,\r\n      1rem 6rem 0 -0.05rem #222, 2rem 6rem 0 -0.05rem #f00,\r\n      3rem 6rem 0 -0.05rem #f00, 4rem 6rem 0 -0.05rem #222,\r\n      5rem 6rem 0 -0.05rem #fff, 6rem 6rem 0 -0.05rem #fff,\r\n      7rem 6rem 0 -0.05rem #222, 8rem 6rem 0 -0.05rem #f00,\r\n      9rem 6rem 0 -0.05rem #f00, 10rem 6rem 0 -0.05rem #222,\r\n      11rem 6rem 0 -0.05rem #222, /* row 8 */ 0rem 7rem 0 -0.05rem #222,\r\n      1rem 7rem 0 -0.05rem #fff, 2rem 7rem 0 -0.05rem #222,\r\n      3rem 7rem 0 -0.05rem #222, 4rem 7rem 0 -0.05rem #222,\r\n      5rem 7rem 0 -0.05rem #fff, 6rem 7rem 0 -0.05rem #fff,\r\n      7rem 7rem 0 -0.05rem #222, 8rem 7rem 0 -0.05rem #222,\r\n      9rem 7rem 0 -0.05rem #222, 10rem 7rem 0 -0.05rem #fff,\r\n      11rem 7rem 0 -0.05rem #222, /* row 9 */ 0rem 8rem 0 -0.05rem #fff,\r\n      1rem 8rem 0 -0.05rem #222, 2rem 8rem 0 -0.05rem #fff,\r\n      3rem 8rem 0 -0.05rem #fff, 4rem 8rem 0 -0.05rem #fff,\r\n      5rem 8rem 0 -0.05rem #222, 6rem 8rem 0 -0.05rem #222,\r\n      7rem 8rem 0 -0.05rem #fff, 8rem 8rem 0 -0.05rem #fff,\r\n      9rem 8rem 0 -0.05rem #fff, 10rem 8rem 0 -0.05rem #222,\r\n      11rem 8rem 0 -0.05rem #fff, /* row 10 */ 0rem 9rem 0 -0.05rem #fff,\r\n      1rem 9rem 0 -0.05rem #222, 2rem 9rem 0 -0.05rem #fff,\r\n      3rem 9rem 0 -0.05rem #fff, 4rem 9rem 0 -0.05rem #fff,\r\n      5rem 9rem 0 -0.05rem #fff, 6rem 9rem 0 -0.05rem #fff,\r\n      7rem 9rem 0 -0.05rem #fff, 8rem 9rem 0 -0.05rem #fff,\r\n      9rem 9rem 0 -0.05rem #fff, 10rem 9rem 0 -0.05rem #222,\r\n      11rem 9rem 0 -0.05rem #fff, /* row 11 */ 0rem 10rem 0 -0.05rem #fff,\r\n      1rem 10rem 0 -0.05rem #fff, 2rem 10rem 0 -0.05rem #222,\r\n      3rem 10rem 0 -0.05rem #222, 4rem 10rem 0 -0.05rem #fff,\r\n      5rem 10rem 0 -0.05rem #fff, 6rem 10rem 0 -0.05rem #fff,\r\n      7rem 10rem 0 -0.05rem #fff, 8rem 10rem 0 -0.05rem #222,\r\n      9rem 10rem 0 -0.05rem #222, 10rem 10rem 0 -0.05rem #fff,\r\n      11rem 10rem 0 -0.05rem #fff, /* row 12 */ 0rem 11rem 0 -0.05rem #fff,\r\n      1rem 11rem 0 -0.05rem #fff, 2rem 11rem 0 -0.05rem #fff,\r\n      3rem 11rem 0 -0.05rem #fff, 4rem 11rem 0 -0.05rem #222,\r\n      5rem 11rem 0 -0.05rem #222, 6rem 11rem 0 -0.05rem #222,\r\n      7rem 11rem 0 -0.05rem #222, 8rem 11rem 0 -0.05rem #fff,\r\n      9rem 11rem 0 -0.05rem #fff, 10rem 11rem 0 -0.05rem #fff,\r\n      11rem 11rem 0 -0.05rem #fff;\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport Container from './style';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Container>\r\n      <div className=\"pixel\"></div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    height: 75px;\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport Container from './style';\r\n\r\ninterface SearchBarProps {\r\n  value?: string;\r\n  onSearch: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nexport const SearchBar = ({ value, onSearch }: SearchBarProps) => {\r\n  return (\r\n    <Container>\r\n      <div className=\"nes-field\">\r\n        <input\r\n          list=\"pokemon-list\"\r\n          value={value}\r\n          onChange={(e) => onSearch(e.target.value)}\r\n          type=\"text\"\r\n          className=\"nes-input\"\r\n          placeholder=\"Search Pokémons...\"\r\n        />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import axios, { Canceler } from 'axios';\r\nimport { apiURL } from './consts';\r\n\r\nconst CancelToken = axios.CancelToken;\r\nexport let cancel: Canceler;\r\n\r\nexport const instance = axios.create({\r\n  baseURL: apiURL,\r\n  timeout: 10000,\r\n  headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  function (config) {\r\n    config.cancelToken = new CancelToken((c) => {\r\n      cancel = c;\r\n    });\r\n    // Do something before request is sent\r\n    return config;\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n","import { HTMLProps, MutableRefObject } from 'react';\r\n\r\nconst splitIdFromURL = (str: string) => {\r\n  const id = str.split('/pokemon/')[1].replace('/', '');\r\n  return Number(id);\r\n};\r\n\r\nconst getUniqueItems = (arr: string[]) => {\r\n  const uniqueItems = [arr[0]];\r\n\r\n  for (let i = 0; i < arr.length - 1; i++) {\r\n    let current = arr[i];\r\n    let next = arr[i + 1];\r\n\r\n    if (current.slice(0, 10) !== next.slice(0, 10)) {\r\n      uniqueItems.push(next);\r\n    }\r\n  }\r\n\r\n  return uniqueItems;\r\n};\r\n\r\nconst randomArrayElement = (list: string[]) => {\r\n  const randomElement = list[Math.floor(Math.random() * list.length)];\r\n  return randomElement;\r\n};\r\n\r\nconst getAverageRGB = (imgEl: HTMLImageElement | null) => {\r\n  // thanks to http://jsfiddle.net/xLF38/818/\r\n  if (imgEl) {\r\n    var blockSize = 5, // only visit every 5 pixels\r\n      defaultRGB = { r: 0, g: 0, b: 0 }, // for non-supporting envs\r\n      canvas = document.createElement('canvas'),\r\n      context = canvas.getContext && canvas.getContext('2d'),\r\n      data,\r\n      width,\r\n      height,\r\n      i = -4,\r\n      length,\r\n      rgb = { r: 0, g: 0, b: 0 },\r\n      count = 0;\r\n\r\n    if (!context) {\r\n      return defaultRGB;\r\n    }\r\n\r\n    height = canvas.height =\r\n      imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;\r\n    width = canvas.width =\r\n      imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;\r\n\r\n    context.drawImage(imgEl, 0, 0);\r\n\r\n    try {\r\n      data = context.getImageData(0, 0, width, height);\r\n    } catch (e) {\r\n      /* security error, img on diff domain */ alert('x');\r\n      return defaultRGB;\r\n    }\r\n\r\n    length = data.data.length;\r\n\r\n    while ((i += blockSize * 4) < length) {\r\n      ++count;\r\n      rgb.r += data.data[i];\r\n      rgb.g += data.data[i + 1];\r\n      rgb.b += data.data[i + 2];\r\n    }\r\n\r\n    // ~~ used to floor values\r\n    rgb.r = ~~(rgb.r / count);\r\n    rgb.g = ~~(rgb.g / count);\r\n    rgb.b = ~~(rgb.b / count);\r\n\r\n    return rgb;\r\n  }\r\n};\r\n\r\nexport { splitIdFromURL, getUniqueItems, randomArrayElement, getAverageRGB };\r\n","import { instance } from './api';\r\nimport { PokemonList } from '../types/pokemon';\r\nimport { AxiosResponse } from 'axios';\r\nimport { splitIdFromURL } from './utility';\r\n\r\nconst fetchDefaultPokemons = async (count: number) => {\r\n  const { data }: AxiosResponse<PokemonList> = await instance.get(\r\n    `pokemon?limit=${count}`\r\n  );\r\n\r\n  const modified = data.results.map((item) => {\r\n    const id = splitIdFromURL(item.url);\r\n    return {\r\n      ...item,\r\n      id,\r\n    };\r\n  });\r\n\r\n  return { ...data, results: modified };\r\n};\r\n\r\nconst fetchMorePokemons = async (defaultData: PokemonList) => {\r\n  const api = defaultData.next.split('v2');\r\n  const { data }: AxiosResponse<PokemonList> = await instance.get(api[1]);\r\n\r\n  const payload: PokemonList = data;\r\n\r\n  const modified = payload.results.map((item) => {\r\n    const id = splitIdFromURL(item.url);\r\n    return {\r\n      ...item,\r\n      id,\r\n    };\r\n  });\r\n  return { ...payload, results: defaultData.results.concat(modified) };\r\n};\r\n\r\nexport { fetchDefaultPokemons, fetchMorePokemons };\r\n","import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  z-index: 1;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    height: 75px;\r\n    top: 60px;\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppContext } from '../../../hooks/usePokemonListAPI';\r\nimport Container from './style';\r\n\r\nconst PokemonList = () => {\r\n  const history = useHistory();\r\n  const useCtx = useContext(AppContext);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (useCtx?.pokemons.length) {\r\n      setSuccess(true);\r\n      setTimeout(() => {\r\n        setSuccess(false);\r\n      }, 500);\r\n    }\r\n  }, [useCtx?.pokemons]);\r\n\r\n  const onChangeHandler = (id: number | string) => {\r\n    if (id === 'view_all') {\r\n      return history.push('/list');\r\n    }\r\n    if (id) {\r\n      return history.push(`/pokemon/${id}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className={`nes-select ${success ? 'is-success' : ''}`}>\r\n        <select onChange={(e) => onChangeHandler(e.target.value)}>\r\n          <option>My Pokémons</option>\r\n          {useCtx?.pokemons.map((item) => (\r\n            <option key={item.id} value={item.id}>\r\n              {item.name}\r\n            </option>\r\n          ))}\r\n          {useCtx?.pokemons.length ? (\r\n            <option value=\"view_all\">View All</option>\r\n          ) : null}\r\n        </select>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { PokemonList } from '../types/pokemon';\r\nimport Container from './style';\r\nimport { Pokemon } from '../components/Pokemon';\r\nimport Loading from '../components/Loading';\r\nimport { SearchBar } from '../components/SearchBar';\r\nimport { fetchDefaultPokemons, fetchMorePokemons } from '../services/fetches';\r\nimport { startsWith } from 'lodash';\r\nimport { useHistory } from 'react-router-dom';\r\nimport List from '../components/List/Dropdown';\r\n\r\nconst initialState = {\r\n  count: 0,\r\n  next: '',\r\n  previous: '',\r\n  results: [{ name: '', url: '', id: 0 }],\r\n};\r\n\r\nconst Pokemons: React.FC = () => {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [data, setData] = useState<PokemonList>(initialState);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [defaultData, setDefaultData] = useState<PokemonList>(initialState);\r\n\r\n  const fetch = async (count: number) => {\r\n    const response = await fetchDefaultPokemons(count);\r\n    setLoading(false);\r\n    setDefaultData(response);\r\n    setData(response);\r\n  };\r\n\r\n  const fetchMore = async () => {\r\n    const response = await fetchMorePokemons(data);\r\n    setData(response);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!searchValue) {\r\n      return setData(defaultData);\r\n    }\r\n\r\n    const filtered = defaultData.results.filter((item) =>\r\n      startsWith(item.name.toUpperCase(), searchValue.toUpperCase())\r\n    );\r\n\r\n    setData({ ...defaultData, results: filtered });\r\n  }, [searchValue, defaultData, history]);\r\n\r\n  useEffect(() => {\r\n    const area =\r\n      (document.getElementById('root')?.clientHeight ?? 150) *\r\n      (document.getElementById('root')?.clientWidth ?? 200);\r\n\r\n    const count = Math.floor(area / (200 * 150));\r\n    fetch(count);\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Container className=\"nes-container with-title is-rounded\">\r\n        <SearchBar value={searchValue} onSearch={setSearchValue} />\r\n        <List />\r\n        <InfiniteScroll\r\n          style={{ overflow: 'hidden', marginTop: 60 }}\r\n          dataLength={data.results.length}\r\n          next={fetchMore}\r\n          hasMore={!!data.next}\r\n          loader={null}\r\n        >\r\n          <div className=\"flex flex-wrap justify-center\">\r\n            {data.results.map((item) => {\r\n              return (\r\n                <article\r\n                  className=\"col col-12 sm-col-6 md-col-4 lg-col-3 xl-col-2 nes-container is-rounded\"\r\n                  key={item.id}\r\n                >\r\n                  <Pokemon data={item} />\r\n                </article>\r\n              );\r\n            })}\r\n          </div>\r\n        </InfiniteScroll>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokemons;\r\n","import { css } from '@emotion/core';\r\n\r\nconst globalCSS = css`\r\n  * {\r\n    box-sizing: inherit;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  #root {\r\n    min-height: 100vh;\r\n  }\r\n  html {\r\n    font-family: 'Press Start 2P', cursive;\r\n    box-sizing: border-box;\r\n    font-size: 15px;\r\n  }\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    background: transparent\r\n      url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/50859/bit-tile-blue.gif)\r\n      repeat-x 50% 0;\r\n    background-repeat: repeat;\r\n    animation: infinite-shift-left 5000s linear;\r\n  }\r\n  .container {\r\n    padding-right: 1rem;\r\n    padding-left: 1rem;\r\n    margin: 2rem auto 2rem auto;\r\n    overflow: overlay;\r\n  }\r\n  img {\r\n    image-rendering: pixelated;\r\n  }\r\n  .pokemon-sprite {\r\n    width: 100%;\r\n    display: flex;\r\n    image-rendering: pixelated;\r\n    border: inset #9aa28b 3px;\r\n    border-radius: 5px;\r\n    margin: 10px 0;\r\n    box-sizing: border-box;\r\n    background: linear-gradient(\r\n      15deg,\r\n      #cad5b5 64%,\r\n      #dde2d4 70%,\r\n      #dde2d4 81%,\r\n      #fff 86%,\r\n      #dde2d4 89%,\r\n      #dde2d4 100%\r\n    );\r\n  }\r\n\r\n  .pokemon-description {\r\n    font-size: 18px;\r\n    letter-spacing: 0;\r\n    min-height: 115px;\r\n    box-sizing: border-box;\r\n    flex: 1;\r\n  }\r\n  .screen {\r\n    background: linear-gradient(\r\n      14deg,\r\n      rgb(165, 205, 83) 60%,\r\n      rgb(193, 217, 144) 65%\r\n    );\r\n    padding: 5px;\r\n  }\r\n\r\n  .pokemon-badge {\r\n    width: 300px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    .container {\r\n      width: 750px;\r\n    }\r\n  }\r\n  @media (min-width: 992px) {\r\n    .container {\r\n      width: 970px;\r\n    }\r\n  }\r\n  @media (min-width: 1200px) {\r\n    .container {\r\n      width: 1170px;\r\n    }\r\n  }\r\n  @keyframes infinite-shift-left {\r\n    0% {\r\n      background-position: 50000px;\r\n    }\r\n    100% {\r\n      background-position: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default globalCSS;\r\n","import styled from '@emotion/styled';\r\n\r\nconst Container = styled.section`\r\n  min-height: 100vh;\r\n\r\n  .nes-container {\r\n    width: 75%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n  .title {\r\n    text-transform: uppercase;\r\n  }\r\n  .inner-container {\r\n    width: 100%;\r\n    position: relative;\r\n    display: flex;\r\n\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { instance } from '../services/api';\r\nimport { getUniqueItems } from '../services/utility';\r\nimport { Pokemon, SpeciesDataProps } from '../types/pokemon';\r\n\r\ninterface SpeciesData {\r\n  data: SpeciesDataProps;\r\n}\r\n\r\ninterface PokemonProp {\r\n  data: Pokemon;\r\n}\r\n\r\nconst useFetchPokemon = (id: string) => {\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<boolean>(false);\r\n  const [data, setData] = useState<Pokemon | undefined>();\r\n  const [species, setSpecies] = useState<SpeciesDataProps | undefined>();\r\n  const [descriptions, setDescriptions] = useState<string[]>([]);\r\n  const [evolutions, setEvolutions] = useState<Pokemon[]>([]);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { data: pokemonData }: PokemonProp = await instance.get(\r\n        `pokemon/${id}`\r\n      );\r\n\r\n      const fetchSpeciesURL = pokemonData.species.url;\r\n\r\n      const { data: speciesData }: SpeciesData = await instance.get(\r\n        fetchSpeciesURL\r\n      );\r\n\r\n      const flavorTexts = speciesData.flavor_text_entries\r\n        .filter((item) => item.language.name === 'en')\r\n        .map((item) => item.flavor_text);\r\n\r\n      const descriptions: string[] = getUniqueItems(flavorTexts);\r\n      const fetchEvolution = speciesData.evolution_chain.url;\r\n\r\n      const { data: evolutionData } = await instance.get(fetchEvolution);\r\n\r\n      const evolutions = [];\r\n      const first = evolutionData.chain;\r\n      let second;\r\n      let third;\r\n\r\n      const { data: evolution1 } = await instance.get(\r\n        `pokemon/${first.species.name}/`\r\n      );\r\n      evolutions.push(evolution1);\r\n      second = first.evolves_to[0];\r\n\r\n      if (second) {\r\n        const { data: evolution2 } = await instance.get(\r\n          `pokemon/${second.species.name}/`\r\n        );\r\n        evolutions.push(evolution2);\r\n        third = second.evolves_to[0];\r\n      }\r\n\r\n      if (third) {\r\n        const { data: evolution3 }: PokemonProp = await instance.get(\r\n          `pokemon/${third.species.name}/`\r\n        );\r\n        evolutions.push(evolution3);\r\n      }\r\n\r\n      setData(pokemonData);\r\n      setDescriptions(descriptions);\r\n      setEvolutions(evolutions);\r\n      setSpecies(speciesData);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(true);\r\n      console.error(error);\r\n      setLoading(false);\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      fetchData();\r\n    }\r\n  }, [id, fetchData]);\r\n\r\n  return { loading, data, species, evolutions, descriptions, error };\r\n};\r\n\r\nexport default useFetchPokemon;\r\n","import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  .nes-container {\r\n    margin: 0;\r\n    width: 90%;\r\n  }\r\n  .buttons {\r\n    width: 90%;\r\n  }\r\n  .screen {\r\n    padding-right: 0.5rem;\r\n    padding-left: 0.5rem;\r\n  }\r\n\r\n  p {\r\n    height: 200px;\r\n    overflow-y: auto;\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  .nes-container::-webkit-scrollbar-track {\r\n    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n  .nes-container::-webkit-scrollbar {\r\n    width: 10px;\r\n    background-color: #f5f5f5;\r\n  }\r\n\r\n  .nes-container::-webkit-scrollbar-thumb {\r\n    background-color: #0ae;\r\n\r\n    background-image: -webkit-gradient(\r\n      linear,\r\n      0 0,\r\n      0 100%,\r\n      color-stop(0.5, rgba(255, 255, 255, 0.2)),\r\n      color-stop(0.5, transparent),\r\n      to(transparent)\r\n    );\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import React, { useState } from 'react';\r\nimport Container from './style';\r\n\r\ninterface DescriptionProps {\r\n  descriptions: string[];\r\n}\r\n\r\nexport const Description = ({ descriptions }: DescriptionProps) => {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleButton = (newIndex: number) => {\r\n    if (newIndex > descriptions.length - 1) {\r\n      return setIndex(0);\r\n    }\r\n\r\n    if (newIndex < 0) {\r\n      return setIndex(descriptions.length - 1);\r\n    }\r\n    setIndex(newIndex);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"nes-container is-rounded screen flex items-center content-stretch\">\r\n        <span onClick={() => handleButton(index - 1)}>\r\n          <i className=\"snes-logo\" />\r\n        </span>\r\n\r\n        <p className=\"p2\">{descriptions[index]}</p>\r\n\r\n        <span onClick={() => handleButton(index + 1)}>\r\n          <i className=\"snes-jp-logo\" />\r\n        </span>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from './style';\r\nimport { Pokemon } from '../../../types/pokemon';\r\nimport { Description } from './Description';\r\nimport { Img } from '../../Img';\r\n\r\ninterface LeftPanelProps {\r\n  data: Pokemon;\r\n  descriptions: string[];\r\n}\r\n\r\ninterface SpriteProps {\r\n  front: boolean;\r\n  female: boolean;\r\n  shiny: boolean;\r\n  [key: string]: boolean;\r\n}\r\n\r\nexport const LeftPanel = ({ data, descriptions }: LeftPanelProps) => {\r\n  const [imgSrc, setImgSrc] = useState<SpriteProps>({\r\n    front: true,\r\n    female: false,\r\n    shiny: false,\r\n  });\r\n  const [src, setSrc] = useState<string | null>('');\r\n\r\n  useEffect(() => {\r\n    if (data.sprites) {\r\n      const source = imageSource(imgSrc);\r\n      setSrc(data.sprites[source]);\r\n    }\r\n  }, [imgSrc, data.sprites]);\r\n\r\n  const imageSource = ({ front, shiny, female }: SpriteProps): string => {\r\n    const position = front ? 'front' : 'back';\r\n    const light = shiny ? '_shiny' : '_default';\r\n    const gender = female ? '_female' : '';\r\n\r\n    if (gender === '_female' && light === '_default') {\r\n      return position + gender;\r\n    }\r\n    return position + light + gender;\r\n  };\r\n\r\n  const handleChange = (attribute: string) => {\r\n    const spriteCopy = { ...imgSrc, [attribute]: !imgSrc[attribute] };\r\n    const source = imageSource(spriteCopy);\r\n\r\n    if (data.sprites && !data.sprites[source]) {\r\n      return;\r\n    }\r\n\r\n    return setImgSrc({ ...imgSrc, [attribute]: !imgSrc[attribute] });\r\n  };\r\n\r\n  return (\r\n    <Container className=\"col-12 lg-col-6 flex flex-column justify-between\">\r\n      <div className=\"nes-container is-rounded\">\r\n        {src && <Img src={src} alt={data.name} styles=\"pokemon-sprite\" />}\r\n      </div>\r\n      <div className=\"flex buttons justify-around mt2 mb2\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"nes-btn is-primary\"\r\n          onClick={() => handleChange('female')}\r\n        >\r\n          {!imgSrc.female ? 'Female' : 'Male'}\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"nes-btn is-primary\"\r\n          onClick={() => handleChange('shiny')}\r\n        >\r\n          Shiny\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"nes-btn is-primary\"\r\n          onClick={() => handleChange('front')}\r\n        >\r\n          Back\r\n        </button>\r\n      </div>\r\n      <Description descriptions={descriptions} />\r\n    </Container>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n  .nes-container {\r\n    margin: 0;\r\n    width: 100%;\r\n  }\r\n  img {\r\n    height: 120px;\r\n    width: 120px;\r\n    margin: 3px 0;\r\n  }\r\n\r\n  .flex {\r\n    justify-content: space-between;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Pokemon } from '../../../../types/pokemon';\r\nimport { Img } from '../../../Img';\r\nimport Container from './style';\r\ninterface RightPanelProps {\r\n  evolutions: Pokemon[];\r\n}\r\n\r\nexport const Evolutions = ({ evolutions }: RightPanelProps) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Container className=\"mt2\">\r\n      <div className=\"nes-container is-rounded flex flex-wrap\">\r\n        {evolutions.map((item, i) => (\r\n          <div\r\n            key={i}\r\n            className=\"flex flex-column nes-pointer\"\r\n            onClick={() => history.push(`/pokemon/${item.id}`)}\r\n          >\r\n            <Img\r\n              src={item.sprites.front_default || ' '}\r\n              styles=\"pokemon-sprite\"\r\n              alt={item.name}\r\n            />\r\n\r\n            <div>{item.name}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  margin-top: 2rem;\r\n  .nes-container {\r\n    width: 100%;\r\n  }\r\n  .move-screen {\r\n    margin: 3px;\r\n    padding: 10px 20px;\r\n    flex: 1;\r\n    height: 100%;\r\n  }\r\n\r\n  .move-controls {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    padding: 0 10px 0 7px;\r\n  }\r\n\r\n  p {\r\n    height: unset;\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import React, { useState } from 'react';\r\nimport Container from './style';\r\nimport { MovesProps } from '../../../../types/pokemon';\r\n\r\ninterface MoveProps {\r\n  moves: MovesProps[];\r\n}\r\n\r\nexport const Moves = ({ moves }: MoveProps) => {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleButton = (newIndex: number) => {\r\n    if (newIndex > moves.length - 4) {\r\n      return setIndex(0);\r\n    }\r\n\r\n    if (newIndex < 0) {\r\n      return setIndex(moves.length - 4);\r\n    }\r\n    setIndex(newIndex);\r\n  };\r\n  return (\r\n    <Container>\r\n      <div className=\"nes-container is-rounded flex\">\r\n        <div className=\"nes-container is-rounded screen move-screen\">\r\n          <p>{moves[index].move.name}</p>\r\n          <p>{moves[index + 1].move.name}</p>\r\n          <p>{moves[index + 2].move.name}</p>\r\n          <p>{moves[index + 3].move.name}</p>\r\n        </div>\r\n        <div className=\"move-controls\">\r\n          <span onClick={() => handleButton(index - 4)}>\r\n            <i className=\"snes-logo\" />\r\n          </span>\r\n\r\n          <span onClick={() => handleButton(index + 4)}>\r\n            <i className=\"snes-jp-logo\" />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  .nes-container {\r\n    width: 100%;\r\n  }\r\n  .progress-div {\r\n    display: flex;\r\n  }\r\n\r\n  .nes-progress {\r\n    height: 1rem;\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport Container from './style';\r\nimport { PokemonStatItem } from '../../../../types/pokemon';\r\n\r\ninterface StatsProps {\r\n  stats: PokemonStatItem[];\r\n}\r\n\r\nexport const Stats = ({ stats }: StatsProps) => {\r\n  return (\r\n    <Container>\r\n      <div className=\"nes-container is-rounded\">\r\n        {stats.map((item, i) => (\r\n          <div key={i}>\r\n            <label htmlFor={item.stat.name}>\r\n              {item.stat.name}:{item.base_stat}\r\n            </label>\r\n            <progress\r\n              id={item.stat.name}\r\n              className=\"nes-progress\"\r\n              value={item.base_stat}\r\n              max=\"100\"\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  .nes-container {\r\n    margin: 0;\r\n  }\r\n\r\n  .screen {\r\n    padding-right: 0.5rem;\r\n    padding-left: 0.5rem;\r\n  }\r\n\r\n  p {\r\n    height: 200px;\r\n    overflow-y: auto;\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { randomArrayElement } from '../../../../services/utility';\r\nimport { PokemonTypeItem } from '../../../../types/pokemon';\r\n\r\ninterface TypeProps {\r\n  badges: PokemonTypeItem[];\r\n}\r\n\r\nconst badgeColors = ['is-dark', 'is-success', 'is-warning', 'is-error'];\r\n\r\nexport const Type = ({ badges }: TypeProps) => {\r\n  return (\r\n    <div className=\"pokemon-type mt2 flex flex-wrap\">\r\n      {badges.map((item, i) => (\r\n        <div className=\"nes-badge\" key={i}>\r\n          <span className={randomArrayElement(badgeColors)}>\r\n            {item.type?.name}\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Pokemon } from '../../../types/pokemon';\r\nimport { Evolutions } from './Evolutions';\r\nimport { Moves } from './Moves';\r\nimport { Stats } from './Stats';\r\nimport Container from './style';\r\nimport { Type } from './Type';\r\n\r\ninterface RightPanelProps {\r\n  evolutions: Pokemon[];\r\n  pokemon: Pokemon;\r\n}\r\n\r\nexport const RightPanel = ({ evolutions, pokemon }: RightPanelProps) => {\r\n  return (\r\n    <Container className=\"col-12 lg-col-6\">\r\n      <Stats stats={pokemon.stats} />\r\n      <Type badges={pokemon.types} />\r\n      <Evolutions evolutions={evolutions} />\r\n      <Moves moves={pokemon.moves} />\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport Container from './style';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport useFetchPokemon from '../../hooks/useFetchPokemon';\r\nimport Loading from '../Loading';\r\nimport { LeftPanel } from './LeftPanel';\r\nimport { RightPanel } from './RightPanel';\r\nimport PokemonList from '../List/Dropdown';\r\nimport { AppContext } from '../../hooks/usePokemonListAPI';\r\n\r\ninterface IdProps {\r\n  id: string;\r\n}\r\n\r\nexport const Details = () => {\r\n  const history = useHistory();\r\n  const useCtx = useContext(AppContext);\r\n  const { id }: IdProps = useParams();\r\n  const {\r\n    data,\r\n    loading,\r\n    species,\r\n    evolutions,\r\n    descriptions,\r\n    error,\r\n  } = useFetchPokemon(id);\r\n\r\n  if (loading || !data) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>something went wrong!</p>;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"flex items-center\">\r\n      <div className=\"nes-container is-rounded with-title\">\r\n        <PokemonList />\r\n        <div className=\"flex flex-wrap items-center\">\r\n          <div className=\"mr2 nes-pointer\" onClick={() => history.push('/')}>\r\n            Home\r\n          </div>\r\n          <div className=\"nes-badge is-splited pokemon-badge\">\r\n            <span className=\"is-dark\" style={{ width: '75%' }}>\r\n              {data?.name}\r\n            </span>\r\n            <span className=\"is-warning\" style={{ width: '25%' }}>\r\n              #{data.id}\r\n            </span>\r\n          </div>\r\n          <div className=\"ml2\">\r\n            <i\r\n              className=\"nes-icon heart nes-pointer\"\r\n              onClick={() =>\r\n                useCtx?.addPokemon({ id: data.id, name: data.name })\r\n              }\r\n            ></i>\r\n          </div>\r\n          <div className=\"ml2\">\r\n            <i\r\n              className=\"nes-icon is-transparent heart nes-pointer\"\r\n              onClick={() => useCtx?.removePokemon(data.id)}\r\n            ></i>\r\n          </div>\r\n        </div>\r\n        <div className=\"inner-container nes-container flex-wrap is-rounded\">\r\n          <LeftPanel data={data} descriptions={descriptions} />\r\n          <RightPanel evolutions={evolutions} pokemon={data} />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  .nes-container {\r\n    width: 100%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import React, { useContext } from 'react';\r\nimport Container from './style';\r\nimport { spriteEndpoint } from '../../../../services/consts';\r\nimport { Img } from '../../../Img';\r\nimport { AppContext } from '../../../../hooks/usePokemonListAPI';\r\n\r\ninterface ListItemProps {\r\n  pokemon: {\r\n    id: number;\r\n    name: string;\r\n  };\r\n}\r\n\r\nexport const ListItem = ({ pokemon }: ListItemProps) => {\r\n  const useCtx = useContext(AppContext);\r\n  return (\r\n    <Container>\r\n      <div className=\"nes-container is-rounded flex justify-between items-center\">\r\n        <div>\r\n          <Img\r\n            src={spriteEndpoint(pokemon.id)}\r\n            alt={pokemon.name}\r\n            styles=\"screen\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <p>{pokemon.name}</p>\r\n        </div>\r\n        <div>\r\n          <i\r\n            className=\"nes-icon close nes-pointer\"\r\n            onClick={() => useCtx?.removePokemon(pokemon.id)}\r\n          ></i>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nconst Container = styled.div`\r\n  min-height: 100vh;\r\n\r\n  .nes-container {\r\n    width: 50%;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    .nes-container {\r\n      width: 80%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppContext } from '../../../hooks/usePokemonListAPI';\r\nimport { ListItem } from './Item';\r\nimport Container from './style';\r\n\r\nexport const PokemonListDetails = () => {\r\n  const history = useHistory();\r\n  const useCtx = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    if (!useCtx?.pokemons.length) {\r\n      history.push('/');\r\n    }\r\n  }, [useCtx, history]);\r\n\r\n  return (\r\n    <Container className=\"flex items-center\">\r\n      <div className=\"nes-container is-centered with-title is-rounded\">\r\n        <p className=\"title\">My Pokémons</p>\r\n        {useCtx?.pokemons.map((item) => (\r\n          <ListItem key={item.id} pokemon={{ id: item.id, name: item.name }} />\r\n        ))}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import React from 'react';\nimport { Global } from '@emotion/core';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Pokemons from './containers';\nimport rootStyles from './rootStyles';\nimport { Details } from './components/Details';\nimport { AppProvider } from './hooks/usePokemonListAPI';\nimport { PokemonListDetails } from './components/List/PokemonListDetails';\n\nconst App: React.FC = () => {\n  return (\n    <AppProvider>\n      <Router>\n        <Global styles={rootStyles} />\n        <Switch>\n          <Route component={Pokemons} path=\"/\" exact />\n          <Route component={Details} path=\"/pokemon/:id\" exact />\n          <Route component={PokemonListDetails} path=\"/list\" exact />\n        </Switch>\n      </Router>\n    </AppProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'nes.css/css/nes.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}